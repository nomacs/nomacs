name: macOS workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.runner.name }}
    name: build (Qt${{ matrix.qt.ver }}, ${{ matrix.config.type }}, ${{ matrix.runner.arch }})
    strategy:
      matrix:
        runner:
          - name: macos-13 # github-hosted runner name
            arch: intel # file/log labeling
            arch_flags: # cmake flags
            cpus: 4 # vcpu allocation
            homebrew-opt: "/usr/local/opt" # root of qt_dir
          - name: macos-14
            arch: arm64
            arch_flags:
            cpus: 3
            homebrew-opt: "/opt/homebrew/opt"
        qt:
          # we don't try qt5 since github resources are limited
          - ver: 6
            packages: "qt6"
            flags: "-DQT_VERSION_MAJOR=6"
            cmakefiles: "qt6/lib/cmake" # root dir is runner.homebrew-opt
        config:
          # this is extremely slow (~15 minutes) due to opencv and bundle, disabled for now
          # - type: default
          #   packages: googletest exiv2 quazip libraw opencv
          #   flags: "-DENABLE_QUAZIP=ON"
          #   kimageformats: true # compile kimageformats, currently requires qt6
          #   portable: false # use the new portable bundle script
          #   bundle: true # build portable bundle using macdeployqt
          #   artifacts: true # upload artifacts
          #   release: true # TODO: publish release
          - type: minimum
            packages: googletest exiv2
            flags: "-DENABLE_PLUGINS=OFF -DENABLE_OPENCV=OFF -DENABLE_RAW=OFF -DENABLE_TIFF=OFF -DENABLE_QUAZIP=OFF"
            kimageformats: true
            portable: true
            bundle: false
            artifacts: false
            release: false

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install build dependencies
        run: |
          brew install ${{ matrix.qt.packages }} ${{ matrix.config.packages }}

      - name: Checkout submodules
        run: |
          cd ${GITHUB_WORKSPACE}
          git submodule init
          git submodule update 3rd-party/imageformats ImageLounge/plugins

      - name: CMake configure
        run: |
          mkdir ${GITHUB_WORKSPACE}/build
          cd ${GITHUB_WORKSPACE}/build
          export CMAKE_PREFIX_PATH="${{ matrix.runner.homebrew-opt }}/${{ matrix.qt.cmakefiles }}"
          cmake ${{ matrix.runner.arch_flags }} ${{ matrix.qt.flags }} ${{ matrix.config.flags }} ../ImageLounge

      - name: Get Build Version
        id: get_version
        run: |
          cd ${GITHUB_WORKSPACE}/build
          OS=$(sw_vers -productVersion)
          SHA=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})
          VERSION=$(cat DkVersion.h | grep NOMACS_VERSION_STR | sed 's/[^0-9\.]*//g')
          echo "VERSION=${VERSION}-${SHA}-${OS}" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}/build
          make -j${{ matrix.runner.cpus }}

      - name: Test
        run: |
          cd ${GITHUB_WORKSPACE}/build
          make check

      - name: Build kimageformats
        if: matrix.config.kimageformats
        run: |
          cd ${GITHUB_WORKSPACE}/build
          export CMAKE_PREFIX_PATH="${{ matrix.runner.homebrew-opt }}/${{ matrix.qt.cmakefiles }}"
          make kimageformats

      - name: Make Portable Bundle (Fast)
        if: matrix.config.portable
        run: |
          cd ${GITHUB_WORKSPACE}/build
          make portable

      - name: Make Portable Bundle
        if: matrix.config.bundle
        run: |
          cd /usr/local/lib/QtGui.framework/Versions/A
          install_name_tool -id '@rpath/QtGui.framework/Versions/A/QtGui' QtGui
          otool -L QtGui | head -2
          cd ${GITHUB_WORKSPACE}/build
          make bundle

      - name: Upload Artifacts
        if: matrix.config.artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "nomacs-${{ steps.get_version.outputs.VERSION }}-${{ matrix.runner.arch }}-${{ matrix.config.type }}-qt${{ matrix.qt.ver}}.dmg"
          path: build/nomacs.dmg
          retention-days: 30
